@model PhotoManager.Model.ViewModels.PhotoViewModel


<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group">
    @{
        var diaphragmList = new SelectList(ViewBag.DiaphragmList, ViewBag.DiaphragmList[0]);
    }
    @Html.LabelFor(model => model.Diaphragm, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.DropDownListFor(model => model.Diaphragm, diaphragmList, new { @class = "form-control" })
</div>

<div class="form-group">
    @{
        var list = Enumerable.Range(0, 33).Select(x => x * 100);
        var isoList = new SelectList(list);
    }
    @Html.LabelFor(model => model.ISO, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.DropDownListFor(model => model.ISO,
        isoList,
        new { @class = "form-control" })
</div>

<div class="form-group">

    @Html.LabelFor(model => model.Flash, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.EditorFor(model => model.Flash, new { htmlAttributes = new { @class = "form-control" } })
    @*@Html.ValidationMessageFor(model => model.Flash, "", new { @class = "text-danger" })*@

</div>

<div class="form-group">

    @Html.LabelFor(model => model.PhotoTakingPlace, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.EditorFor(model => model.PhotoTakingPlace, new { htmlAttributes = new { @class = "form-control" } })
    @*@Html.ValidationMessageFor(model => model.PhotoTakingPlace, "", new { @class = "text-danger" })*@

</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShutterSpeed, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.EditorFor(model => model.ShutterSpeed.Numerator, new { htmlAttributes = new { @class = "form-control box-fraction", min = "1", @Value = 1 } })
    @Html.Label("———")
    @Html.EditorFor(model => model.ShutterSpeed.Denominator, new { htmlAttributes = new { @class = "form-control box-fraction", min = "1", @Value = 1 } })
    @Html.ValidationMessageFor(model => model.ShutterSpeed, "", new { @class = "text-danger" })
</div>
<div class="form-group">

    @Html.LabelFor(model => model.LensFocalLength, htmlAttributes: new { @class = "control-label label-nonfloat" })
    @Html.EditorFor(model => model.LensFocalLength, new { htmlAttributes = new { @class = "form-control" } })

</div>